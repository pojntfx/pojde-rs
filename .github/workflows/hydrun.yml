name: hydrun CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - dir: .
            os: debian
            arch: amd64
            target: x86_64-unknown-linux-gnu
            pkgs: gcc-x86-64-linux-gnu
            cc: x86_64-linux-gnu-gcc
          - dir: .
            os: debian
            arch: amd64
            target: aarch64-unknown-linux-gnu
            pkgs: gcc-aarch64-linux-gnu
            cc: aarch64-linux-gnu-gcc
          - dir: .
            os: debian
            arch: amd64
            target: riscv64gc-unknown-linux-gnu
            pkgs: gcc-riscv64-linux-gnu
            cc: riscv64-linux-gnu-gcc

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up hydrun
        run: |
          curl -L -o /tmp/hydrun https://github.com/pojntfx/hydrun/releases/download/latest/hydrun.linux-$(uname -m)
          sudo install /tmp/hydrun /usr/local/bin
      - name: Build with hydrun
        working-directory: ${{ matrix.project.dir }}
        run: hydrun -o ${{ matrix.project.os }} -a ${{ matrix.project.arch }} 'sh -c "CARGO_BUILD_TARGET=\"${{ matrix.project.target }}\" PKGS=\"${{ matrix.project.pkgs }}\" CROSS_COMPILER=\"${{ matrix.project.cc }}\" ./Hydrunfile"'
      - name: Fix permissions for output
        working-directory: ${{ matrix.project.dir }}
        run: sudo chown -R $USER target
      - name: Upload output
        uses: actions/upload-artifact@v2
        with:
          name: staging-${{ matrix.project.dir }}
          path: |
            ${{ matrix.project.dir }}/target/${{ matrix.project.target }}/release/*
            !${{ matrix.project.dir }}/target/${{ matrix.project.target }}/release/.*
            !${{ matrix.project.dir }}/target/${{ matrix.project.target }}/release/*.d
            !${{ matrix.project.dir }}/target/${{ matrix.project.target }}/release/*/

  publish-linux:
    runs-on: ubuntu-latest
    needs: build-linux

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download output
        uses: actions/download-artifact@v2
        with:
          path: /tmp/out
      - name: Publish pre-release to GitHub releases
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: unstable
          prerelease: true
          files: |
            /tmp/out/**/*
      - name: Publish release to GitHub releases
        if: startsWith(github.ref, 'refs/tags/v')
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            /tmp/out/**/*
