#!/bin/bash

# Setup Debian ports
apt update
apt install -y debian-ports-archive-keyring
cat <<EOT >>/etc/apt/sources.list
deb http://ftp.ports.debian.org/debian-ports unstable main
deb http://ftp.ports.debian.org/debian-ports unreleased main
deb http://ftp.ports.debian.org/debian-ports experimental main
EOT

# Install native dependencies
dpkg --add-architecture "${DEBIAN_ARCH}"
apt update
apt install -y curl make sudo build-essential ${DEBIAN_PKGS} # Don't quote `DEBIAN_PKGS`, it's an array!

# Fix certificate authorities on armv7
export SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt

# Install Rust
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y
. /root/.cargo/env

# Set up Rust for cross-compilation
rustup target add "${CARGO_BUILD_TARGET}"
cat <<EOT >/root/.cargo/config
[target.${CARGO_BUILD_TARGET}]
linker = "${LINKER}"
EOT

# Set up C for macOS cross-compilation
export OSXCROSS_PKG_CONFIG_USE_NATIVE_VARIABLES=1
export MACOSX_DEPLOYMENT_TARGET=11.1

# Install macOS dependencies
if [ ! "${MACOS_PKGS}" = "" ]; then yes 1 | osxcross-macports install --static ${MACOS_PKGS}; fi # Don't quote `MACOS_PKGS`, it's an array!

# Install dependencies
USER=root make depend

# Start development or make release
if [ "$1" = 'dev' ]; then
    make dev
else
    make release
fi
